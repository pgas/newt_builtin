#!/bin/bash

# Extract functions from newt.h
# bash > 4

if [[ $1 != *newt.h ]];then
   echo >&2  "usage: extract_newt_h /path/to/newt.h"
   exit 1
fi

readarray -t fnames < <(awk -F\( 'NF>1 && /;/ && !/^typedef/{sub(/.*newt/,"",$1);print $1}' "$1" )

declare -A first_words
for f in  "${fnames[@]}";do
    f=${f,}
    first_words["${f%%[[:upper:]]*}"]+=" ${f#${f%%[[:upper:]]*}}"
done

#if only one function, make it one word
for k in "${!first_words[@]}";do

    if [[ "${first_words[$k]}" != " "*" "* ]]; then
	if [[ ${first_words[$k]} != " " ]];then
            first_words[$k${first_words[$k]#" "}]=""
	    unset "first_words[$k]"
	fi
    fi

done

# hashing using djb2...bash version
# unsigned long
#     hash(unsigned char *str)
#     {
#         unsigned long hash = 5381;
#         int c;
#         while (c = *str++)
#             hash = ((hash << 5) + hash) + c; /* hash * 33 + c */
#         return hash;
#     }


# list of defines
for k in "${!first_words[@]}";do
    hash=5381
    for ((i=0;i<${#k};i+=1)); do
	LC_CTYPE=C printf -v c %d "'${k:i:1}"
	(( hash = ((hash '<<' 5) + hash)+c ))
    done
    printf -v def "#define %s %ul" ${k^^} $hash
    printf "%sull\n" "${def%l}"
done | sort

#case statements
printf '%s\n' "${!first_words[@]}" | sort | while read -r k; do
    printf "case %s:\n    return libnewt_%s(list->next);\n    break;\n" ${k^^} $k
done 



#list of sub commands
for k in "${!first_words[@]}";do
    if [[ ${first_words[$k]} == *[a-z]* ]];then 
	printf "%s:%s\n" "$k" "${first_words[$k]}"
    fi
done | sort

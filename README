
bash loadable builtin around newt

Newt
----

Newt is a programming library for color text mode, widget based user
interfaces.  Newt can be used to add stacked windows, entry widgets,
checkboxes, radio buttons, labels, plain text fields, scrollbars,
etc., to text mode user interfaces.  Newt is based on the slang
library.

Homepage:
    https://pagure.io/newt


Tutorial
----
http://gnewt.sourceforge.net/tutorial.html
(copy in ./html/)

Code Generator
-------------

# create virutal env:
virturalenv ENV && source ENV/bin/activate

# install the requirements
pip install -r requirements.txt

# generate the preprocessed header (pycparser wants preprocessed source)
gcc -nostdinc -E  -I ./utils/fake_libc_include/ -E /path/to/newt/newt.h > pre_processed_newt.h



Thoughts
------

* It's not a good idea to all newt in different subshells...maybe it
  could be a good idea to verify that calls that assign/destroy
  components are called in the same pid as newtInit

* I choose "-v var" to return values like printf, but I'm not too
  found of it.

* The interface could be done in a more idiomatic way eg: use options
  instead of passing flags, eg instead of
  $((NEWT_FLAG_RETURNEXIT|NEWT_ENTRY_SCROLL)) passing "-e -s"

  Or instead of `newt compactbutton -v b2 22 2 "Cancel"' use
  `newt button -c -v b2 22 2 "Cancel"'

* I don't know if it's a good idea to keep arguments like "setfilter" as one word or use 2 words "set filter"....or allow both


  
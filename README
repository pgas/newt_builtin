
bash loadable builtin around newt

Newt
----

Newt is a programming library for color text mode, widget based user
interfaces.  Newt can be used to add stacked windows, entry widgets,
checkboxes, radio buttons, labels, plain text fields, scrollbars,
etc., to text mode user interfaces.  Newt is based on the slang
library.

Homepage:
    https://pagure.io/newt

Newt Tutorial
----
http://gnewt.sourceforge.net/tutorial.html
(copy in ./html/)

Installation
-------------

* create  a python virutal env:

`virtualenv ENV && source ENV/bin/activate`

* install the requirements

`pip install -r requirements.txt`

* configure inside the virtual env

```
. ENV/bin/activate`
./configure
```

* compile the builtin

`make`

* enable the builtin

```
enable -ff ./.libs/newt.sh  newt`
newt init
```

Tests
-------------
To be able to run the tests, you will need a fully compiled bash source tree.
by default it looks for this in ../bash, you can also use the option --with-bash-sources.


"libbash"
-------------
To be able to use the functions defined in bash, the configure script
creates a "libbash". 

To avoid conflict with the `main` of bash, the tests are using a `__wrap_main` instead

the libbash is simply created with all the object in the top level directory

```
ar rvs libbash.a $with_bash_sources/*.o
```

The other objects are linked using the same .a bash is using

**Bugs**:

1) it is perhaps not that robust against different version of bash


Thoughts
------

* It's not a good idea to all newt in different subshells...maybe it
  could be a good idea to verify that calls that assign/destroy
  components are called in the same pid as newtInit

* what to do with return values?



  

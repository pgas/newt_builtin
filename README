
bash loadable builtin around newt

Newt
----

Newt is a programming library for color text mode, widget based user
interfaces.  Newt can be used to add stacked windows, entry widgets,
checkboxes, radio buttons, labels, plain text fields, scrollbars,
etc., to text mode user interfaces.  Newt is based on the slang
library.

Homepage:
    https://pagure.io/newt


Tutorial
----
http://gnewt.sourceforge.net/tutorial.html
(copy in ./html/)

Code Generator
-------------

# create virutal env:
virtualenv ENV && source ENV/bin/activate

# install the requirements
pip install -r requirements.txt


#configure inside the virtual env
./configure --with-bash-sources=../bash 

The following is done by the configure script (good idea?)

# generate the preprocessed header (pycparser wants preprocessed source)
gcc -nostdinc -E  -I ./utils/fake_libc_include/ -E /path/to/newt/newt.h > pre_processed_newt.h
python -m bash_builtin_gen  bash_newt_h.tpl pre_processed_newt.h > src/bash_newt.h




Check
-------------
* not sure how I could workaround to not have to do:
LD_LIBRARY_PATH=./libs make check
(if tell automake that the test programs need to find the newt.so)

* to be able to use the function defines in bash, the configure script
creates a "libbash". The current solution is not very elegant but
as it is used only for development this will do for now

Bugs:

1) it only works in the top source dir
2) it is probably not that robust against different version of bash
3) feels hackish renaming "name"  in the object

Thoughts
------

* It's not a good idea to all newt in different subshells...maybe it
  could be a good idea to verify that calls that assign/destroy
  components are called in the same pid as newtInit

* what to do with return values?



  